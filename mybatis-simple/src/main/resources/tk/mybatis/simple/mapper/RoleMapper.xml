<?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http：//mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="tk.mybatis.simple.mapper.RoleMapper">
    <!--
    mybatis的二级缓存和命令空间绑定的
    默认的二级缓存效果：
    1. 映射语句文件中所有的select语句将会被缓存
    2. 映射语句文件中所有的insert、update、delete语句会刷新缓存
    3. 缓存会使用Least Recently Used算法来回收

    mybatis的回收策略eviction有：
    1. LRU 最近最少使用
    2. FIFO 先进先出
    3. SOFT
    4. WEAK

    flushInterval：刷新间隔，单位毫秒。默认没有刷新间隔，缓存仅仅在语句调用时刷新。
    size：引用数目，默认是1024
    readOnly：设置为true时，只读缓存会给所有调用者返回相同的实例
    -->
    <!-- 使用ehcache-->
    <!--    <cache type="org.mybatis.caches.ehcache.EhcacheCache"/>-->
    <!-- 使用redis-cache -->
    <!-- <cache type="org.mybatis.caches.redis.RedisCache"/>-->
    <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="false"/>
    <!--    <cache-ref namespace="tk.mybatis.simple.mapper.RoleMapper"/>-->
    <resultMap id="roleMap" type="SysRole">
        <id property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="enabled" column="enabled"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="rolePrivilegeListMap" type="SysRole" extends="roleMap">
        <collection property="privilegeList" columnPrefix="privilege_"
                    resultMap="tk.mybatis.simple.mapper.PrivilegeMapper.privilegeMap"/>
    </resultMap>

    <resultMap id="rolePrivilegeListMapSelect" type="SysRole" extends="roleMap">
        <collection property="privilegeList" fetchType="lazy" column="{id=id}"
                    select="tk.mybatis.simple.mapper.PrivilegeMapper.selectPrivilegeByRoleId"/>
    </resultMap>

    <select id="selectRoleByUserId" resultMap="rolePrivilegeListMapSelect">
        select sr.*
        from sys_role sr
                 join sys_user_role sur on sr.id = sur.role_id
        where sur.user_id = #{id}
    </select>

    <select id="selectRoleById" resultMap="roleMap">
        select *
        from sys_role
        where id = #{id}
    </select>
    <select id="selectRoleByUserIdChoose" resultMap="rolePrivilegeListMapChoose">
        select *
        from sys_role sr
                 join sys_user_role sur on sr.id = sur.role_id
        where sur.user_id = #{id}
    </select>
    <resultMap id="rolePrivilegeListMapChoose" type="SysRole">
        <discriminator javaType="int" column="enabled">
            <case value="1" resultMap="rolePrivilegeListMapSelect"/>
            <case value="0" resultMap="roleMap"/>
        </discriminator>
    </resultMap>
</mapper>